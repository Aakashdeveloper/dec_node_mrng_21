https://code.visualstudio.com/download > download & install
https://nodejs.org/en/ > download & install
https://github.com/ > create an account
https://git-scm.com/downloads > download & install
https://www.postman.com/ > download & install

NPM
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-EJS-Mongo-Express)
Third Party Api (Weather Api)
Redis  > 6379
redisWithMongo
Node-Es6(.babel)
ImageUpload
MongoDb Basic >27017  (local/cloud)
Api with NodeJS(Rest)>1
DashBoard(Crud)
Swagger
Github
--Deployment of app---
Heroku
Pm2
Docker
Nginx
Testing
Login/Logout(JWT)
Oauth(with github)
Oauth(with google)
GraphQl API
NodeJs with postgres
Paytm-Payment
Email With Node(sendgird)(https://app.sendgrid.com/)
Chatapp
TelegramChat
FIREBASE
--------NOT---------
React/Angular
Html/css/jquery

NodeJs>
> is Single Threaded, Non Blocking, Async I/O
> open source
> code > Machine Code


NPM
> Node Package Manager

JSON
> JavaScript Object Notation
[
    {
        "name":"John",
        "city":"Delhi"
    },
    {
        "name":"Nikita",
        "city":"Paris"
    },
    {
        "name":"Amit",
        "city":"Amsterdam",
        "class":"Node"
    }
]

>>>>Package.JSON
>>>>Install Package


>>>>Package.JSON
> it the entry point to the app
> Script (start,test)
> All the packages
> MeTa Data (name, description,version)

///Step To Generate The Package.Json////
* NodeJs Must be install in laptop
> npm init 
> Answer all question
> type "yes"

>>>Local Dependencies
> Install for particular application
> Scope of the packages is for same app

///Step To Install Packages////
> go inside the folder using cmd/terminal
> npm i packagename

>>PackageLock > dependency tree


>>>Local Dependencies

>>>Global Dependencies
> Install in your laptop irrespective of folder
> We need admin access to install
> Can be used by any application
> Will not added to packages.json
> package Required to start, build the app

//// Step to install global packages/////
# window
> open the cmd as admin
> npm i -g packageName

# Mac/linux
> open the terminal
> sudo npm i -g packageName

>>nodemon
npm i -g nodemon
help to do continous development

>>> Dev Dependencies

>>>>NodeIn built
>>Os
>>fs
>>http
>>dummyApi

/////////
params (/) > complusory > req.params.id
queryParams(?)> no need to define anywhere > req.query.name

function add(a,b){
    return a+b
}

add(1,2)

//es5
var a = 10
var b = "My age is "+a
"My age is 10"

//Es6
var a = 10
var b = `My age is ${a}`
"My age is 10"

///////
download Redis > https://github.com/dmajkic/redis/downloads
redis > 6379

KEYS *
set keyname value
get keyname 
del keyname
FLUSHALL

///es5
function add(a,b){
    return a+b
}

//Es6
let add = (a,b) => { return a+b}
npm i @babel/core @babel/register @babel/preset-env
///////

npm i body-parser ejs express express-fileupload

mongodb+srv://test:test123@cluster0.f8vmc.mongodb.net/decnode?retryWrites=true&w=majority

C > Create
R > Read
U > Update
D > Delete

Pm2
npm i -g pm2
pm2 start filename
pm2 status
pm2 stop filename

docker build . -t imagename
docker run -p 9200:9800 imagename


npm i chai mocha chai-http

////////////////
npm i jsonwebtoken express cors mongoose bcryptjs body-parser 


/////////////
/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}


/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}


https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps
npm i cors ejs superagent request express

Client ID

///dummy api
npx json-server --watch db.json --port 8700
//query
{
  Products(id:5){
   product_name,
   category,
   Price
  }
}

//mutation
mutation{
  addProducts(
    id:50,
    product_name:"Test product",
  ){
    id
  }
}

brew services start postgresql
brew services stop postgresql