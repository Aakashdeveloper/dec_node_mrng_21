its nosql database
> not a sql

Sql        NoSql
database   Database
table      collection
row        documents
select     find
insert     insert
update     update
delete     remove


>>> SQL
RollNo | Hindi | English | Computer |
 1     |       | 80      |          |
 2     |   80  |         |          |
 3     |   80  |         |   90     |


>>> NoSql

[
    {
        rollNo:1,
        english:80
    },
    {
        rollNo:2,
        hindi:80
    },
    {
        rollNo:3,
        hindi:80,
        computer:90
    }

]

CRUD
C > Create > insert
R > Read   > find
U > Update > update
D > Delete > remove


/////////Step to setup mongodb///////
> install mongodb
> in C drive create one folder by the name of "db"
> in "db" create one folder by the name of "data"

> C:\data\db
> 27017

>>>>Step to start server<<<<
>open cmd
> go inside folder
    c:\programFile\mongodb\5.1\server\bin
> type mongod
(should be always running till the app is running)

>>>>Step to start client<<<<
>open new cmd
> go inside folder
    c:\programFile\mongodb\5.1\server\bin
> type mongo
(should be always running till the app is running)


///to see all database
> show dbs

/// to go inside database
> use database name

//// to see all collection
> show collection

//// to see data in collection
> db.collectionName.find()

_id > is primary key, no duplicates

12 byte
(random number) 5 bytes
(series) 3bytes 
(timestamp) 4bytes

// Create new database
use databaseName

// to see all collection
show collections

/// insert data
db.collectionname.insert({name:"John"})
db.test.insert({name:'John'})
db.test.insert({_id:1,name:'Amit'})
db.test.insert({_id:1,name:'Nikita'})

/// find with conditions
db.products.find({category_id:2, product_name:"Washing Machine"}).pretty()

db.products.find({category_id:1}).skip(10).limit(10).pretty()

//projection (select particular fields)

db.products.find({condition},{projection}).pretty()

db.products.find({},{product_name:1,Price:1,_id:0}).pretty()

//sort
db.products.find({category_id:2},{product_name:1,Price:1,_id:0}).sort({Price:1})

//skip
db.products.find({category_id:2},{product_name:1,Price:1,_id:0}).sort({Price:1}).skip(3)

//limit
db.products.find({category_id:2},{product_name:1,Price:1,_id:0}).sort({Price:1}).skip(0).limit(2)

////
db.hotels.find({cost:{$gt:8000}},{name:1,cost:1,_id:1})

db.hotels.find({$and:[{cost:{$gt:5000,$lt:8000}}]},{name:1,cost:1,_id:1})

db.hotels.find({'type.roomtype':'2'}).pretty()


db.hotels.find({'type.roomtype':{$in:['3','4']}}).pretty()

///////////////
update
///////////////

db.collection.update(
    {condition},
    {update}
)

db.test.update(
    {'name':'Amit'},
    {
        $set:{
            "phone":2334434434,
            "city":"Delhi"
        }
    }
)

db.test.update(
    {'name':'Amit'},
    {
        $unset:{
            "city":1
        }
    }
)

// particular
db.test.remove({name:'John'})

// all records
db.test.remove({})